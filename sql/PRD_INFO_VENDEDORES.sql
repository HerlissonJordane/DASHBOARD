IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'PRD_INFO_VENDEDORES')
DROP PROCEDURE PRD_INFO_VENDEDORES
GO
CREATE PROCEDURE PRD_INFO_VENDEDORES
@DATA_INICIAL DATE,
@DATA_FINAL DATE
AS

WITH CTE_QUANTIDADE AS( --CTE PARA PEGAR A QUANTIDADE DE VENDAS DE CADA CLIENTE
SELECT COUNT(CODIGO_VENDEDOR) AS QTD,CODIGO_VENDEDOR
FROM VW_DASH_VENDEDORES
WHERE DATA_VENDA BETWEEN @DATA_INICIAL AND @DATA_FINAL
GROUP BY CODIGO_VENDEDOR
),

CTE_TOTAL AS( --CTE PARA PEGAR O TOTAL DE VENDAS DE CADA CLIENTE
SELECT SUM(TOTAL_VENDA) AS TOTAL,CODIGO_VENDEDOR
FROM VW_DASH_VENDEDORES
WHERE DATA_VENDA BETWEEN @DATA_INICIAL AND @DATA_FINAL
GROUP BY CODIGO_VENDEDOR
)

SELECT SUM(TOTAL_VENDA) AS TOTAL,
	   VW.CODIGO_VENDEDOR,
	   VENDEDOR,
	   CAST((TOTAL.TOTAL / QTD.QTD)AS DECIMAL(10,2)) AS TICKET
FROM VW_DASH_VENDEDORES VW INNER JOIN CTE_QUANTIDADE QTD
	 ON VW.CODIGO_VENDEDOR = QTD.CODIGO_VENDEDOR INNER JOIN CTE_TOTAL TOTAL
	 ON VW.CODIGO_VENDEDOR = TOTAL.CODIGO_VENDEDOR
WHERE DATA_VENDA BETWEEN @DATA_INICIAL AND @DATA_FINAL
GROUP BY VENDEDOR, VW.CODIGO_VENDEDOR, TOTAL.TOTAL, QTD.QTD
ORDER BY TOTAL DESC


/*
SELECT *
FROM VW_DASH_VENDEDORES
*/
